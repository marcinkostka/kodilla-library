buildscript {
	ext {
		springBootVersion = '2.0.0.M4'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.crud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

def props=new Properties()
file('src/main/resources/application.properties').withInputStream {props.load(it)}

if (project.hasProperty('dev')) {
	dependencies {
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.projectlombok:lombok')
		compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile('com.google.code.gson:gson:2.8.2')
		compile group: 'com.h2database', name: 'h2', version: '1.4.197'

		testCompile('org.springframework.boot:spring-boot-starter-test')
	}
	props.setProperty('spring.h2.console.enabled', 'true')
	props.setProperty('spring.h2.console.path', '/h2-console')
	props.setProperty('spring.jpa.hibernate.ddl-auto', 'update')
	props.setProperty('spring.jpa.database', 'h2')

} else {
	dependencies {
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.projectlombok:lombok')
		compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile('mysql:mysql-connector-java')
		compile('com.google.code.gson:gson:2.8.2')

		testCompile('org.springframework.boot:spring-boot-starter-test')
		//compile group: 'com.h2database', name: 'h2', version: '1.4.197'
	}
	props.setProperty('spring.jpa.hibernate.ddl-auto', 'update')
	props.setProperty('spring.jpa.database', 'mysql')
	props.setProperty('spring.jpa.properties.hibernate.dialect', 'org.hibernate.dialect.MySQL5Dialect')
	props.setProperty('spring.datasource.url', 'jdbc:mysql://localhost:3306/library_crud?serverTimezone=Europe/Warsaw&yseSSL=False')
	props.setProperty('spring.datasource.username', 'kodilla')
	props.setProperty('spring.datasource.password', 'p@ssw0rd')
}